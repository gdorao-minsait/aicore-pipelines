apiVersion: ai.sap.com/v1alpha1
kind: ServingTemplate
metadata:
  name: case1-serving-pipeline # executable ID, must be unique across your SAP AI Core instance, for example use `server-pipeline-yourname-1234`
  annotations:
    scenarios.ai.sap.com/name: "Case1 Bottle Detection Scenario" # Scenario name should be the use case
    scenarios.ai.sap.com/description: "Image detection with bottles of Estrella Galicia"

    executables.ai.sap.com/name: "case1-model-serving" # Executable name should describe the workflow in the use case  
    executables.ai.sap.com/description: "Serving CV model with Estrella Galicia dataset"

    artifacts.ai.sap.com/case1model.kind: "model" # Suggest the kind of artifact to input.
  labels:
    scenarios.ai.sap.com/id: "case1-detection-scenario"
    ai.sap.com/version: "0.1"
spec:
  inputs:
    artifacts:
      - name: case1model # placeholder name, do not add `-` in value use only alphanumeric chars
  template:
    apiVersion: "serving.kserve.io/v1beta1"
    metadata:
      annotations: |
        autoscaling.knative.dev/metric: concurrency   # condition when to scale
        autoscaling.knative.dev/target: 1
        autoscaling.knative.dev/targetBurstCapacity: 0
      labels: |
        ai.sap.com/resourcePlan: starter # computing power
    spec: |
      predictor:
        imagePullSecrets:
          - name: case1   # your docker registry secret
        minReplicas: 1
        maxReplicas: 5    # how much to scale
        containers:
        - name: kserve-container
          image: docker.io/python:latest
          ports:
            - containerPort: 9001    # customizable port
              protocol: TCP
          command: ["/bin/sh", "-c"]
          args:
            - >
              set -e && echo "Starting" && gunicorn --chdir /app/src main:app -b 0.0.0.0:9001 # filename `main` flask variable `app`
          env:
            - name: STORAGE_URI # Required
              value: "{{inputs.artifacts.case1model}}" # Required reference from artifact name, see above
