apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: case1-training-pipeline # executable id, must be unique across all your workflows (YAML files)
  annotations:
    scenarios.ai.sap.com/name: "Case1 Bottle Detection Scenario" # Scenario name should be the use case
    scenarios.ai.sap.com/description: "Image detection with bottles of Estrella Galicia"

    executables.ai.sap.com/name: "Case1 model training" # Executable name should describe the workflow in the use case  
    executables.ai.sap.com/description: "Training CV model with Estrella Galicia dataset"
    
    artifacts.ai.sap.com/case1dataset.kind: "dataset" # Helps in suggesting the kind of inputs that can be attached.
    artifacts.ai.sap.com/case1model.kind: "model" # Helps in suggesting the kind of artifact that can be generated.
  labels:
    scenarios.ai.sap.com/id: "case1-detection-scenario"
    ai.sap.com/version: "0.1"
spec:
  imagePullSecrets:
    - name: case1 # your docker registry secret
  entrypoint: mypipeline
  arguments:
    parameters: # placeholder for string like inputs
        - name: PARAM1 # identifier local to this workflow
        - name: PARAM2 # identifier local to this workflow
  templates:
  - name: mypipeline
    inputs:
      artifacts:  # placeholder for cloud storage attachements
        - name: case1dataset # a name for the placeholder
          path: /app/data/ # where to copy in the Dataset in the Docker image
    outputs:
      artifacts:
        - name: case1model # local identifier name to the workflow
          globalName: case1model # name of the artifact generated, and folder name when placed in S3, complete directory will be `../<execution_id>/case1model`. Also used above in annotation
          path: /app/model/ # from which folder in docker image (after running workflow step) copy contents to cloud storage
          archive:
            none:   # specify not to compress while uploading to cloud
              {}
    container:
      image: docker.io/python:latest # Your docker image name
      command: ["/bin/sh", "-c"]
      env:
        - name: PARAM1 # name of the environment variable inside Docker container
          value: "{{workflow.parameters.PARAM1}}" # value to set from local (to workflow)
        - name: PARAM2 # name of the environment variable inside Docker container
          value: "{{workflow.parameters.PARAM2}}" # value to set from local (to workflow)
      args:
        - "python /app/src/main.py"
